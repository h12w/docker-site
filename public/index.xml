<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>h12.me</title>
    <link>http://h12.me/</link>
    <description>Recent content on h12.me</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright (c) 2012-2016, Hǎiliàng Wáng; all rights reserved.</copyright>
    <lastBuildDate>Mon, 01 Feb 2016 18:11:29 +0800</lastBuildDate>
    <atom:link href="http://h12.me/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>About Pretty Printing</title>
      <link>http://h12.me/note/about-pretty-print/</link>
      <pubDate>Mon, 01 Feb 2016 18:11:29 +0800</pubDate>
      
      <guid>http://h12.me/note/about-pretty-print/</guid>
      <description>

&lt;h2 id=&#34;json:1197732d8fa443c2a3177ffc1bd0267c&#34;&gt;JSON&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cat xxx.json | jq .
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;xml:1197732d8fa443c2a3177ffc1bd0267c&#34;&gt;XML&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cat xxx.xml | xmllint --format -
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Sending Email from Gmail using Go</title>
      <link>http://h12.me/note/send-email-from-gmail/</link>
      <pubDate>Sun, 31 Jan 2016 20:31:06 +0800</pubDate>
      
      <guid>http://h12.me/note/send-email-from-gmail/</guid>
      <description>&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Turn on &lt;a href=&#34;http://accounts.google.com/SmsAuthConfig&#34;&gt;&amp;ldquo;2-Step Verification&amp;rdquo;&lt;/a&gt; so
that an &lt;a href=&#34;https://security.google.com/settings/security/apppasswords&#34;&gt;&amp;ldquo;App password&amp;rdquo;&lt;/a&gt; can be generated&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;go get gopkg.in/gomail.v2&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Send your Email like the example below:&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main

import (
	&amp;quot;gopkg.in/gomail.v2&amp;quot;
)

func main() {
	m := gomail.NewMessage()
	m.SetHeader(&amp;quot;From&amp;quot;, &amp;quot;from_address@gmail.com&amp;quot;)
	m.SetAddressHeader(&amp;quot;To&amp;quot;, &amp;quot;to_adress@xxx&amp;quot;, &amp;quot;to_name&amp;quot;)
	m.SetAddressHeader(&amp;quot;Cc&amp;quot;, &amp;quot;cc_adress@xxx&amp;quot;, &amp;quot;cc_name&amp;quot;)
	m.SetHeader(&amp;quot;Subject&amp;quot;, &amp;quot;Hello! TEST!&amp;quot;)
	m.SetBody(&amp;quot;text/html&amp;quot;, &amp;quot;Hello! &amp;lt;b&amp;gt;TEST&amp;lt;/b&amp;gt;!&amp;quot;)

	d := gomail.NewPlainDialer(&amp;quot;smtp.gmail.com&amp;quot;, 587, &amp;quot;from_address@gmail.com&amp;quot;, &amp;quot;the App password&amp;quot;)

	if err := d.DialAndSend(m); err != nil {
		panic(err)
	}
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>SSH Resources in Go</title>
      <link>http://h12.me/note/go-ssh-resources/</link>
      <pubDate>Sun, 31 Jan 2016 14:49:01 +0800</pubDate>
      
      <guid>http://h12.me/note/go-ssh-resources/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;golang.org/x/crypto/ssh&lt;/li&gt;
&lt;li&gt;github.com/YuriyNasretdinov/GoSSHa&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Articles:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.ralch.com/tutorial/golang-ssh-connection/&#34;&gt;SSH Client connection in Golang&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://kukuruku.co/hub/golang/ssh-commands-execution-on-hundreds-of-servers-via-go&#34;&gt;Using Go to Execute Commands on Hundreds of Servers with SSH&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>RealTest: real test environment for Go</title>
      <link>http://h12.me/project/realtest/</link>
      <pubDate>Sat, 14 Nov 2015 13:57:09 +0800</pubDate>
      
      <guid>http://h12.me/project/realtest/</guid>
      <description>

&lt;p&gt;h12.me/realtest provides real test environment for Go unit testing, based on Docker.&lt;/p&gt;

&lt;p&gt;Includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Queue

&lt;ul&gt;
&lt;li&gt;Kafka cluster (with zookeeper)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Database:

&lt;ul&gt;
&lt;li&gt;MySQL&lt;/li&gt;
&lt;li&gt;MongoDB&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Cache

&lt;ul&gt;
&lt;li&gt;Redis&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Configuration service

&lt;ul&gt;
&lt;li&gt;ZooKeeper&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;author:392938f6c0ed47446e9bccc40e79ace3&#34;&gt;Author&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/h12w&#34;&gt;Hǎiliàng Wáng&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;contributors:392938f6c0ed47446e9bccc40e79ace3&#34;&gt;Contributors&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/AnotherGoogleFans&#34;&gt;Tao Huang&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Aliyun OSS Go SDK</title>
      <link>http://h12.me/project/aliyun-oss-go-sdk/</link>
      <pubDate>Thu, 22 Oct 2015 15:32:58 +0800</pubDate>
      
      <guid>http://h12.me/project/aliyun-oss-go-sdk/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://drone.io/github.com/h12w/aliyun-oss-go-sdk/latest&#34;&gt;&lt;img src=&#34;https://drone.io/github.com/h12w/aliyun-oss-go-sdk/status.png&#34; alt=&#34;Build
Status&#34; /&gt;
&lt;/a&gt;
&lt;a href=&#34;https://coveralls.io/github/h12w/aliyun-oss-go-sdk?branch=master&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/h12w/aliyun-oss-go-sdk/badge.svg?branch=master&amp;amp;service=github&#34; alt=&#34;Coverage
Status&#34; /&gt;
&lt;/a&gt;
&lt;a href=&#34;https://godoc.org/github.com/aliyun/aliyun-oss-go-sdk/oss&#34;&gt;&lt;img src=&#34;https://godoc.org/github.com/aliyun/aliyun-oss-go-sdk/oss?status.svg&#34; alt=&#34;GoDoc&#34; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Aliyun OSS (Object Storage Service) Go SDK is a client SDK to access Aliyun OSS
API, implemented in the Go programming language.&lt;/p&gt;

&lt;h2 id=&#34;installation:f87687907588b3c94606277d316d7263&#34;&gt;Installation&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go get -u github.com/aliyun/aliyun-oss-go-sdk/oss
go test -v -cover github.com/aliyun/aliyun-oss-go-sdk/oss
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;highlights:f87687907588b3c94606277d316d7263&#34;&gt;Highlights&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Complete set of Aliyun OSS API&lt;/li&gt;
&lt;li&gt;Thouroughly tested

&lt;ul&gt;
&lt;li&gt;100% test coverage&lt;/li&gt;
&lt;li&gt;intuitive table driven tests&lt;/li&gt;
&lt;li&gt;full test suite completes within 2 seconds&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Lint clean

&lt;ul&gt;
&lt;li&gt;golint&lt;/li&gt;
&lt;li&gt;go fmt&lt;/li&gt;
&lt;li&gt;goimports&lt;/li&gt;
&lt;li&gt;go vet&lt;/li&gt;
&lt;li&gt;race detector&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Idiomatic &amp;amp; elegant

&lt;ul&gt;
&lt;li&gt;response is returned as a parsed object&lt;/li&gt;
&lt;li&gt;error is returned as a Go error&lt;/li&gt;
&lt;li&gt;named options for setting headers &amp;amp; parameters&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Great extensibility

&lt;ul&gt;
&lt;li&gt;clean and orthogonal implementation&lt;/li&gt;
&lt;li&gt;users can easily extend the SDK when a new API method is supported&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;No third party dependencies&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;documentation:f87687907588b3c94606277d316d7263&#34;&gt;Documentation&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;doc/overview.md&#34;&gt;Overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;doc/api-object.md&#34;&gt;API Object&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;doc/bucket.md&#34;&gt;Bucket&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;doc/object.md&#34;&gt;Object&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;doc/options.md&#34;&gt;Optional Headers and Parameters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;doc/upload.md&#34;&gt;Multipart Upload&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;doc/cors.md&#34;&gt;Cross-Origin Resource Sharing (CORS)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;doc/lifecycle.md&#34;&gt;Object Lifecycle Management&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;doc/extend.md&#34;&gt;Extending the SDK&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;differences-with-python-sdk:f87687907588b3c94606277d316d7263&#34;&gt;Differences with Python SDK&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;HTTP header User-Agent, e.g. aliyun-sdk-go/0.1.1 (Linux/3.16.0-51-generic/x86_64;go1.5.1)&lt;/li&gt;
&lt;li&gt;Go HTTP client does not support 100-Continue (will be supported after Go 1.6, see &lt;a href=&#34;https://github.com/golang/go/issues/3665&#34;&gt;https://github.com/golang/go/issues/3665&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;HTTP header keys are automatically converted into canonical format, e.g.
x-oss-acl becomes X-Oss-Acl&lt;/li&gt;
&lt;li&gt;Go GET request does not have redundant &amp;ldquo;Content-Length: 0&amp;rdquo; header&lt;/li&gt;
&lt;li&gt;Parameters will be omitted if the argument is not set&lt;/li&gt;
&lt;li&gt;Go always sends URL parameters and headers in canonical order&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;author:f87687907588b3c94606277d316d7263&#34;&gt;Author&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/h12w&#34;&gt;Hǎiliàng Wáng&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;license:f87687907588b3c94606277d316d7263&#34;&gt;License&lt;/h2&gt;

&lt;p&gt;licensed under the &lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0.html&#34;&gt;Apache License 2.0&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;references:f87687907588b3c94606277d316d7263&#34;&gt;References&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aliyun.com/#/pub/oss&#34;&gt;OSS Document (Chinese)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>How to Remove All Exited Containers &amp; Dangling Images for Docker?</title>
      <link>http://h12.me/note/remove-all-exited-docker-containers/</link>
      <pubDate>Mon, 03 Aug 2015 16:55:49 +0800</pubDate>
      
      <guid>http://h12.me/note/remove-all-exited-docker-containers/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker ps --quiet --filter=status=exited | xargs docker rm
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker images --no-trunc=true --filter=&amp;quot;dangling=true&amp;quot; --quiet=true | xargs docker rmi
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>kpax: a modular &amp; idiomatic Kafka client in Go</title>
      <link>http://h12.me/project/kpax/</link>
      <pubDate>Thu, 23 Jul 2015 13:36:25 +0800</pubDate>
      
      <guid>http://h12.me/project/kpax/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://godoc.org/h12.me/kpax&#34;&gt;&lt;img src=&#34;https://godoc.org/h12.me/kpax?status.svg&#34; alt=&#34;GoDoc&#34; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;install:3374022163a333dc756ef0f13859086d&#34;&gt;Install&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;go get -u h12.me/kpax
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;design:3374022163a333dc756ef0f13859086d&#34;&gt;Design&lt;/h2&gt;

&lt;p&gt;The client is built on top of Kafka Wire Protocol (i.e. low-level API). The protocol related types &amp;amp; marshal/unmarshal functions are automatically generated by &lt;a href=&#34;https://github.com/h12w/wipro&#34;&gt;wipro&lt;/a&gt; from &lt;a href=&#34;https://cwiki.apache.org/confluence/display/KAFKA/A+Guide+To+The+Kafka+Protocol&#34;&gt;the HTML spec&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;&lt;code&gt;(-)&lt;/code&gt; means to be done.&lt;/p&gt;

&lt;h3 id=&#34;sub-packages:3374022163a333dc756ef0f13859086d&#34;&gt;Sub packages&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;model&lt;/strong&gt; is an abstraction model for request, response, broker and cluster&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;broker&lt;/strong&gt; is a lazy, asynchronous and recoverable round tripper that talks to a single Kafka broker&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;cluster&lt;/strong&gt; is a metadata manager that talks to a Kafka cluster&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;proto&lt;/strong&gt; contains both low level API and a &amp;ldquo;middle&amp;rdquo; level facade&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;producer&lt;/strong&gt;: fault tolerant high-level producer (batching and partitioning strategy)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;consumer&lt;/strong&gt;: fault tolerant high-level consumer (consumer group and offset commit)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;log&lt;/strong&gt;: replaceable global logger&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;cmd&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;kpax&lt;/strong&gt;: command line tool to help with Kafka programming&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;compatibility:3374022163a333dc756ef0f13859086d&#34;&gt;Compatibility&lt;/h3&gt;

&lt;p&gt;Compatible with Kafka Server 0.8.2.&lt;/p&gt;

&lt;h3 id=&#34;error-handling:3374022163a333dc756ef0f13859086d&#34;&gt;Error Handling&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;broker

&lt;ul&gt;
&lt;li&gt;fail fast: timeout returns error immediately&lt;/li&gt;
&lt;li&gt;release resources carefully&lt;/li&gt;
&lt;li&gt;reconnect when requested next time&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;client

&lt;ul&gt;
&lt;li&gt;metadata reload lazily (only when a leader/coordinator cannot be found in cache)&lt;/li&gt;
&lt;li&gt;leader/coordinator should be deleted on error&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;producer

&lt;ul&gt;
&lt;li&gt;fail over to another partition&lt;/li&gt;
&lt;li&gt;failed partition will be retried again after a period of time&lt;/li&gt;
&lt;li&gt;partition expand (-)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;consumer

&lt;ul&gt;
&lt;li&gt;just loop &amp;amp; wait on error&lt;/li&gt;
&lt;li&gt;partition expand (-)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;graceful shutdown (-)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;efficiency:3374022163a333dc756ef0f13859086d&#34;&gt;Efficiency&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;efficiency

&lt;ul&gt;
&lt;li&gt;batching&lt;/li&gt;
&lt;li&gt;consumer response&lt;/li&gt;
&lt;li&gt;consumer request (-)&lt;/li&gt;
&lt;li&gt;producer (-)&lt;/li&gt;
&lt;li&gt;decompression&lt;/li&gt;
&lt;li&gt;snappy&lt;/li&gt;
&lt;li&gt;gzip (-)&lt;/li&gt;
&lt;li&gt;compression&lt;/li&gt;
&lt;li&gt;snappy (-)&lt;/li&gt;
&lt;li&gt;gzip (-)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;author:3374022163a333dc756ef0f13859086d&#34;&gt;Author&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/h12w&#34;&gt;Hǎiliàng Wáng&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;contributors:3374022163a333dc756ef0f13859086d&#34;&gt;Contributors&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/AnotherGoogleFans&#34;&gt;Tao Huang&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>A Comprehensive Note about Proxy Settings</title>
      <link>http://h12.me/note/proxy-notes/</link>
      <pubDate>Wed, 08 Jul 2015 07:58:34 +0000</pubDate>
      
      <guid>http://h12.me/note/proxy-notes/</guid>
      <description>

&lt;h2 id=&#34;git:98bdf1dc45f059ee4334ef1c195fb8bb&#34;&gt;Git&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&amp;gt; cat ~/.gitconfig
[http]
	proxy = socks5://[host]:[port]
[https]
	proxy = socks5://[host]:[port]
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;curl-homebrew:98bdf1dc45f059ee4334ef1c195fb8bb&#34;&gt;Curl (Homebrew)&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&amp;gt; cat ~/.curlrc
socks5 = &amp;quot;[host]:[port]&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;gae:98bdf1dc45f059ee4334ef1c195fb8bb&#34;&gt;GAE&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Set proxy&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export HTTP_PROXY http://[host]:[port]
export HTTPS_PROXY http://[host]:[port]
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Delete cacerts.txt under GAE SDK installation to disable SSL verification (
make sure the proxy is safe before this step).&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Deploy.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;appcfg.py . --email=[address] --passin
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Phonetic Notations</title>
      <link>http://h12.me/note/phonetic-notations/</link>
      <pubDate>Tue, 30 Jun 2015 12:43:19 +0800</pubDate>
      
      <guid>http://h12.me/note/phonetic-notations/</guid>
      <description>

&lt;h2 id=&#34;google-dictionary:94ca165df739a66252ddc3004eb84c61&#34;&gt;Google Dictionary&lt;/h2&gt;

&lt;p&gt;Google dictionary uses a phonetic notation same as &lt;a href=&#34;http://en.wikipedia.org/wiki/Pronunciation_respelling_for_English&#34;&gt;NORD (New Oxford American Dictionary)&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To figure out an unknown phonetic notation, the simple way is to look up a few words that you know how to pronounce:
church, hat, which, judge, game, thing, ship, thin, this, yes, pleasure
cat, pay, care, father, arm, let, see, here, city, my, pot, no, caught, war, force, boy, put, tour, boot, out, cut, word, item, rabbit, winner, pupil&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Notes on the Design of Go</title>
      <link>http://h12.me/note/go-design/</link>
      <pubDate>Mon, 29 Jun 2015 16:34:59 +0800</pubDate>
      
      <guid>http://h12.me/note/go-design/</guid>
      <description>

&lt;h3 id=&#34;refusing-new-features:152b3ca9eaa5f9a2262d95ae2b1b15be&#34;&gt;Refusing new features&lt;/h3&gt;

&lt;p&gt;Avoid &lt;a href=&#34;https://en.wikipedia.org/wiki/Leaky_abstraction&#34;&gt;leaky abstraction&lt;/a&gt; as much as possible. If an abstraction is not solid enough, you’d rather not use them at all. Go is designed like this, the features are carefully selected. If a feature is not solid enough, it will not be allowed to enter Go.&lt;/p&gt;

&lt;h3 id=&#34;no-implicit-string-concatenation:152b3ca9eaa5f9a2262d95ae2b1b15be&#34;&gt;No implicit string concatenation&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://groups.google.com/d/msg/golang-nuts/S6a3bg65TBE/ikyNMzUSnXsJ&#34;&gt;Rob&lt;/a&gt;:
That used to be in the language but was dropped when the semicolon insertion rules went in. You need the + to be able to span lines, and if you can&amp;rsquo;t span lines operatorless concatenation is close to pointless.&lt;/p&gt;

&lt;h3 id=&#34;no-implicit-conversion:152b3ca9eaa5f9a2262d95ae2b1b15be&#34;&gt;No Implicit conversion&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://groups.google.com/d/msg/golang-nuts/S6a3bg65TBE/ikyNMzUSnXsJ&#34;&gt;Rob&lt;/a&gt;:
In any case the clarity of Go&amp;rsquo;s strictness is worth the occasional conversion. A huge class of bugs is simply gone, and a huge piece of tricky language in the specification never needed to be written.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://groups.google.com/d/msg/golang-nuts/S6a3bg65TBE/KUNfj8L4H4IJ&#34;&gt;Russ&lt;/a&gt;:
Inserting automatic widening means giving up the &amp;ldquo;named types are not the same&amp;rdquo; rule, which makes it pretty much a non-starter.&lt;/p&gt;

&lt;h3 id=&#34;octal-literal:152b3ca9eaa5f9a2262d95ae2b1b15be&#34;&gt;Octal literal&lt;/h3&gt;

&lt;p&gt;Octal numeric system is rarely used, why does Go support them?&lt;/p&gt;

&lt;p&gt;From Wikipedia “Octal”: Octal representation of non-ASCII bytes may be particularly handy with UTF-8, where any start byte has octal value \3nn and any continuation byte has octal value \2nn.&lt;/p&gt;

&lt;h3 id=&#34;null-pointer-billion-dollar-mistake:152b3ca9eaa5f9a2262d95ae2b1b15be&#34;&gt;Null pointer (billion-dollar mistake)&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://groups.google.com/d/msg/golang-nuts/Vxpuc37S8tQ/2zGB1QgjmbAJ&#34;&gt;Jonathan&lt;/a&gt;:
in the eyes of the Go designers, who clearly don&amp;rsquo;t view it as a billion-dollar mistake, and in my eyes as well,
 having spent days debugging (or failing to debug) race conditions, but rarely more than an hour per null-pointer bug).&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://groups.google.com/d/msg/golang-nuts/SskXyc9D5Sk/-EKHAIFBRXEJ&#34;&gt;rog&lt;/a&gt;:
even in languages with no nil, such as Haskell, you can still get exceptions from using things that have an unexpected form. e.g. head [] that&amp;rsquo;s not too different from a nil pointer exception. so even if you go the non-nil route, you may still end up paying a good proportion of the &amp;ldquo;billion dollar&amp;rdquo; price.&lt;/p&gt;

&lt;h3 id=&#34;return-errors-rather-than-exceptions:152b3ca9eaa5f9a2262d95ae2b1b15be&#34;&gt;Return errors rather than exceptions&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://blogs.msdn.com/b/oldnewthing/archive/2005/01/14/352949.aspx&#34;&gt;Raymond Chen&lt;/a&gt;:
It&amp;rsquo;s easy to write bad code, regardless of the error model. It&amp;rsquo;s hard to write good error-code-based code since you have to check every error code and think about what you should do when an error occurs. It&amp;rsquo;s really hard to write good exception-based code since you have to check every single line of code (indeed, every sub-expression) and think about what exceptions it might raise and how your code will react to it. (In C++ it&amp;rsquo;s not quite so bad because C++ exceptions are raised only at specific points during execution. In C#, exceptions can be raised at any time.)&lt;/p&gt;

&lt;h3 id=&#34;nil-channel-always-blocks-both-send-and-receive:152b3ca9eaa5f9a2262d95ae2b1b15be&#34;&gt;Nil channel always blocks (both send and receive)&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://groups.google.com/d/msg/golang-nuts/QltQ0nd9HvE/VvDhLO07Oq4J&#34;&gt;Rob&lt;/a&gt;:
It&amp;rsquo;s for consistency with select. The semantics of a nil channel are
the same regardless of how it is used. It&amp;rsquo;s useful that it blocks in a
select, so that&amp;rsquo;s what it does outside a select.&lt;/p&gt;

&lt;h3 id=&#34;reading-a-closed-channel-always-succeeds-with-zero-value:152b3ca9eaa5f9a2262d95ae2b1b15be&#34;&gt;Reading a closed channel always succeeds with zero value&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;the read cannot block because then it will not be distinguishable with nil channel.&lt;/li&gt;
&lt;li&gt;the read cannot panic because the writer close the channel to signal that it has been closed, not to panicking the reader.&lt;/li&gt;
&lt;li&gt;Then the read has to return, which value to return? Since the channel has been closed, so the only possible value is a fake one &amp;ndash; default zero value. an additional result of type bool reporting whether the communication succeeded.
e.g. v, ok := &amp;lt;-ch.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;writing-a-closed-channel-panics:152b3ca9eaa5f9a2262d95ae2b1b15be&#34;&gt;Writing a closed channel panics&lt;/h3&gt;

&lt;p&gt;The channel should only be closed by the writer(not reader), so if a writer close the channel and then write it again, it should be a programming bug and panic is the right behavior.&lt;/p&gt;

&lt;h3 id=&#34;full-qualified-package-name:152b3ca9eaa5f9a2262d95ae2b1b15be&#34;&gt;Full qualified package name&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://groups.google.com/d/msg/golang-nuts/-tyo4o1uVTQ/FbDSkH9kq_oJ&#34;&gt;Rob&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;Using . as an import name is part of the language and necessary in some cases to solve difficult naming issues but it&amp;rsquo;s not the intended style.  Package authors can depend on the fact that their code lives in its own name space.  If . becomes standard, then all packages in effect become a global name space and the style changes. Instead of&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;foo.New
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;the function must be called something like&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;foo.NewFoo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;to avoid colliding with New from other packages.  And then what if Foo is itself a common name such as Buffer?  You rapidly end up in the Java space of very long names for everything.&lt;/p&gt;

&lt;p&gt;This convention we have, using the package names always, is deliberate.  Yes, sometimes it makes for more typing but we believe in the long run it means less typing.&lt;/p&gt;

&lt;h3 id=&#34;slice-type-is-a-builtin-type:152b3ca9eaa5f9a2262d95ae2b1b15be&#34;&gt;Slice type is a builtin type&lt;/h3&gt;

&lt;p&gt;To support variadic arguments.&lt;/p&gt;

&lt;h3 id=&#34;what-is-type-t-t:152b3ca9eaa5f9a2262d95ae2b1b15be&#34;&gt;What is &lt;code&gt;type T []T&lt;/code&gt;?&lt;/h3&gt;

&lt;p&gt;?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>What Go cannot Do</title>
      <link>http://h12.me/note/what-go-cannot-do/</link>
      <pubDate>Tue, 16 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>http://h12.me/note/what-go-cannot-do/</guid>
      <description>

&lt;p&gt;This is a list about the corner cases that Go cannot do, and their work arounds.&lt;/p&gt;

&lt;h2 id=&#34;run-all-deferred-functions-of-other-goroutines-when-a-goroutine-panics:9e386c4da73e9ffc81b3d6aaf29abff9&#34;&gt;Run all deferred functions of other goroutines when a goroutine panics&lt;/h2&gt;

&lt;p&gt;Uncaught panicking of one goroutine will exit the program without executing deferred functions of other goroutines.&lt;/p&gt;

&lt;p&gt;Workaround: this is the standard behavior, C++ with RAII also has the same problem. Persist your data in a way that crashing will not cause data integrity issue.&lt;/p&gt;

&lt;h2 id=&#34;assigning-to-fields-with-short-declaration-notation:9e386c4da73e9ffc81b3d6aaf29abff9&#34;&gt;Assigning to fields with short declaration notation&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Issue: &lt;a href=&#34;https://github.com/golang/go/issues/6842&#34;&gt;6842&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Status: Open &amp;amp; Unplanned&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When it is useful:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;if x.f, ok := f(); !ok {
	...
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Workaround:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;var ok bool
if x.f, ok = f(); !ok {
	...
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;accessing-unexported-fields-with-reflect-value-interface-method:9e386c4da73e9ffc81b3d6aaf29abff9&#34;&gt;Accessing unexported fields with reflect.Value.Interface method&lt;/h2&gt;

&lt;p&gt;When it is useful:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type S struct {
   val string
}

...

var s S

reflect.Value(s).Fields(0).Interface()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The code will panics with message:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;reflect.Value.Interface: cannot return value obtained from unexported field or method
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Workaround:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;v := reflect.Value(s).Fields(0)
if v.Kind() == reflect.String {
	s := v.String()
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;slice-of-array-literal:9e386c4da73e9ffc81b3d6aaf29abff9&#34;&gt;Slice of array literal&lt;/h2&gt;

&lt;p&gt;e.g.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;[3]int{1, 2, 3}[:]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Just use slice literal instead!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ebook Manipulation Tools</title>
      <link>http://h12.me/note/ebook-tools/</link>
      <pubDate>Thu, 04 Jun 2015 14:19:38 +0800</pubDate>
      
      <guid>http://h12.me/note/ebook-tools/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;Ebook manager: &lt;a href=&#34;http://calibre-ebook.com/&#34;&gt;Calibre&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Kindle PDF optimizer: &lt;a href=&#34;http://www.willus.com/k2pdfopt/&#34;&gt;k2pdfopt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;PDF Border Cropper &lt;a href=&#34;http://sourceforge.net/projects/briss/&#34;&gt;Briss&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CHM File Extractor &lt;a href=&#34;https://github.com/dottedmag/archmage&#34;&gt;archmage&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;PDF editing &lt;a href=&#34;http://xournal.sourceforge.net&#34;&gt;Xournal&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;convert images to PDF&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;	sudo apt-get install imagemagick
	convert *.jpg pictures.pdf
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>How to &#34;go get&#34; Behind a Proxy</title>
      <link>http://h12.me/note/go-get-behind-proxy/</link>
      <pubDate>Wed, 06 May 2015 12:01:11 +0800</pubDate>
      
      <guid>http://h12.me/note/go-get-behind-proxy/</guid>
      <description>

&lt;h2 id=&#34;proxy-for-go-get:70e7a77773bb657f64cd08cb621ddcd5&#34;&gt;Proxy for &amp;ldquo;go get&amp;rdquo;&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;https_proxy=http://user:pass@proxy_host:port go get ...
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;proxy-for-git:70e7a77773bb657f64cd08cb621ddcd5&#34;&gt;Proxy for Git&lt;/h2&gt;

&lt;p&gt;In &lt;code&gt;$HOME/.gitconfig&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[https]
	proxy = proxy_url
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;proxy-for-mercurial:70e7a77773bb657f64cd08cb621ddcd5&#34;&gt;Proxy for Mercurial&lt;/h2&gt;

&lt;p&gt;In &lt;code&gt;$HOME/.hgrc&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[http_proxy]
host = host:port
user = ...
passwd = ...
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Tips on SSH</title>
      <link>http://h12.me/note/tips-on-ssh/</link>
      <pubDate>Tue, 28 Apr 2015 10:59:02 +0800</pubDate>
      
      <guid>http://h12.me/note/tips-on-ssh/</guid>
      <description>

&lt;h2 id=&#34;generate-ssh-keys:94a5150ca2ae26062cc82162c1b651e1&#34;&gt;Generate SSH keys&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ssh-keygen -C w@h12.me
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;authorize-public-key-at-remote-server:94a5150ca2ae26062cc82162c1b651e1&#34;&gt;Authorize public key at remote server&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ssh-copy-id user@host
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;On Mac OSX, &lt;code&gt;ssh-copy-id&lt;/code&gt; should be installed first.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install ssh-copy-id
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;generate-pem:94a5150ca2ae26062cc82162c1b651e1&#34;&gt;Generate PEM&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ssh-keygen -f ~/.ssh/id_rsa -e -m pem &amp;gt; ~/.ssh/id_rsa.pem
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>How to Generate XSD Schema from XML?</title>
      <link>http://h12.me/note/generate-xsd-from-xml/</link>
      <pubDate>Thu, 23 Apr 2015 15:41:12 +0800</pubDate>
      
      <guid>http://h12.me/note/generate-xsd-from-xml/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://archive.apache.org/dist/xmlbeans/binaries&#34;&gt;Apache XMLBeans&lt;/a&gt; is an old tool but still functioning. Download and uncompress the latest binary release, then run inst2xsd under bin folder (needs JDK).&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;inst2xsd xxx.xml
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>