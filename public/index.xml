<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>h12.me</title>
    <link>http://h12.me/</link>
    <description>Recent content on h12.me</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright (c) 2012-2016, Hǎiliàng Wáng; all rights reserved.</copyright>
    <lastBuildDate>Mon, 05 Sep 2016 10:30:49 +0800</lastBuildDate>
    <atom:link href="http://h12.me/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Making Code Block Wrap in Jira</title>
      <link>http://h12.me/note/make-jira-code-wrap/</link>
      <pubDate>Mon, 05 Sep 2016 10:30:49 +0800</pubDate>
      
      <guid>http://h12.me/note/make-jira-code-wrap/</guid>
      <description>&lt;p&gt;It is a hack.&lt;/p&gt;

&lt;p&gt;Set Jira Administration -&amp;gt; System -&amp;gt; Announcement Banner -&amp;gt; Announcement:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;&amp;lt;style type=&amp;quot;text/css&amp;quot;&amp;gt;
pre {
    white-space: pre-wrap!important;
}
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>One-liner to check MongoDB Connections</title>
      <link>http://h12.me/note/mongodb-conn/</link>
      <pubDate>Fri, 02 Sep 2016 15:40:41 +0800</pubDate>
      
      <guid>http://h12.me/note/mongodb-conn/</guid>
      <description>&lt;pre&gt;&lt;code&gt;mongo --eval &amp;quot;JSON.stringify(db.currentOp(true))&amp;quot; | \
tail -n +3 | \
jq -r .inprog[].client | \
sed &#39;s/\(.*\):.*/\1/&#39; \
| sort | uniq -c | sort -nr
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;dump connection information in standard JSON format&lt;/li&gt;
&lt;li&gt;remove MongoDB header&lt;/li&gt;
&lt;li&gt;extract IP:port as a list&lt;/li&gt;
&lt;li&gt;trim port&lt;/li&gt;
&lt;li&gt;sort IPs by freqencies&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>kpax</title>
      <link>http://h12.me/slide/kpax/</link>
      <pubDate>Sun, 21 Aug 2016 13:00:00 +0000</pubDate>
      
      <guid>http://h12.me/slide/kpax/</guid>
      <description>&lt;section class=&#39;slides layout-widescreen&#39;&gt;

      &lt;article&gt;
        &lt;h1&gt;kpax&lt;/h1&gt;
        &lt;h3&gt;a modular &amp;amp; idiomatic Kafka client in Go&lt;/h3&gt;
        &lt;h3&gt;21 August 2016&lt;/h3&gt;
        
          &lt;div class=&#34;presenter&#34;&gt;
            
  
  &lt;p&gt;
    Wáng Hǎiliàng
  &lt;/p&gt;
  

  
  &lt;p&gt;
    Gopher at Appcoach
  &lt;/p&gt;
  

          &lt;/div&gt;
        
      &lt;/article&gt;

  
  
      &lt;article&gt;
      
        &lt;h3&gt;Introduction&lt;/h3&gt;
        
  
  &lt;p&gt;
    About Me
  &lt;/p&gt;
  

  &lt;ul&gt;
  
    &lt;li&gt;Pure Gopher since 2012&lt;/li&gt;
  
    &lt;li&gt;Backend Lead at Appcoach&lt;/li&gt;
  
    &lt;li&gt;https://h12.me&lt;/li&gt;
  
  &lt;/ul&gt;

  
  &lt;p&gt;
    About Appcoach
  &lt;/p&gt;
  

  &lt;ul&gt;
  
    &lt;li&gt;Global mobile advertising agency founded in 2014&lt;/li&gt;
  
    &lt;li&gt;All backend services are written in Go&lt;/li&gt;
  
    &lt;li&gt;http://www.appcoachs.com&lt;/li&gt;
  
  &lt;/ul&gt;

      
      &lt;/article&gt;
  
  
  
      &lt;article&gt;
      
        &lt;h2&gt;Rationale&lt;/h2&gt;
      
      &lt;/article&gt;
  
  
  
      &lt;article&gt;
      
        &lt;h3&gt;Why Kafka?&lt;/h3&gt;
        
  
  &lt;p&gt;
    No resources to build our own messaging system from scratch :-)
  &lt;/p&gt;
  

  
  &lt;p&gt;
    Kafka has excellent design and robust implementation:
  &lt;/p&gt;
  

  &lt;ul&gt;
  
    &lt;li&gt;A distributed, persisted, replicated messaging system&lt;/li&gt;
  
    &lt;li&gt;Key concepts: topic, partition, offset, retention, replication-factor, partition leader, consumer group, broker/cluster&lt;/li&gt;
  
  &lt;/ul&gt;

&lt;div class=&#34;image&#34;&gt;
  &lt;img src=&#34;http://h12.me/img/kpax/kafka.png&#34;&gt;
&lt;/div&gt;

      
      &lt;/article&gt;
  
  
  
      &lt;article&gt;
      
        &lt;h3&gt;Why yet another Go client for Kafka?&lt;/h3&gt;
        
  
  &lt;p&gt;
    Disappointed about the unnecessary complexity of
  &lt;/p&gt;
  

  &lt;ul&gt;
  
    &lt;li&gt;&lt;code&gt;sarama&lt;/code&gt;&lt;/li&gt;
  
    &lt;li&gt;&lt;code&gt;siesta&lt;/code&gt; &amp;amp; &lt;code&gt;go_kafka_client&lt;/code&gt;&lt;/li&gt;
  
  &lt;/ul&gt;

  
  &lt;p&gt;
    Gain better understanding about Kafka by writing a client and know how to troubleshoot when problems occur
  &lt;/p&gt;
  

      
      &lt;/article&gt;
  
  
  
      &lt;article&gt;
      
        &lt;h3&gt;Goal&lt;/h3&gt;
        
  &lt;ul&gt;
  
    &lt;li&gt;Simplicity: a thin layer above Kafka Wire Protocol, avoiding abuse of goroutines and channels&lt;/li&gt;
  
    &lt;li&gt;Modularity: separation of mechanism and policy, allowing the policy code to be easily replaced&lt;/li&gt;
  
    &lt;li&gt;Verifiability: unit test, manual checking with CLI and online data tracing&lt;/li&gt;
  
  &lt;/ul&gt;

      
      &lt;/article&gt;
  
  
  
      &lt;article&gt;
      
        &lt;h2&gt;Kafka Wire Protocol&lt;/h2&gt;
      
      &lt;/article&gt;
  
  
  
      &lt;article&gt;
      
        &lt;h3&gt;BNF&lt;/h3&gt;
        
  
  &lt;p&gt;
    From http://kafka.apache.org/protocol.html:
  &lt;/p&gt;
  

  
  &lt;div class=&#34;code&#34;&gt;&lt;pre&gt;MessageSet =&amp;gt; &amp;lt;OffsetMessage&amp;gt;
    OffsetMessage =&amp;gt; Offset SizedMessage
    Offset =&amp;gt; int64
    SizedMessage =&amp;gt; Size CrcMessage
    Size =&amp;gt; int32
    CrcMessage =&amp;gt; Crc Message
    Crc =&amp;gt; uint32

Message =&amp;gt; MagicByte Attributes Key Value
    MagicByte =&amp;gt; int8
    Attributes =&amp;gt; int8
    Key =&amp;gt; bytes
    Value =&amp;gt; bytes&lt;/pre&gt;&lt;/div&gt;
  

      
      &lt;/article&gt;
  
  
  
      &lt;article&gt;
      
        &lt;h3&gt;Code Generation&lt;/h3&gt;
        
  
  &lt;p&gt;
    By h12.me/wipro:
  &lt;/p&gt;
  

  
  &lt;div class=&#34;code&#34;&gt;&lt;pre&gt;func (t *MessageSet) Marshal(w *wipro.Writer) {
    offset := len(w.B)
    w.WriteInt32(0)
    start := len(w.B)
    for i := range *t {
        (*t)[i].Marshal(w)
    }
    w.SetInt32(offset, int32(len(w.B)-start))
}

func (t *Message) Marshal(w *wipro.Writer) {
    w.WriteInt8(t.MagicByte)
    w.WriteInt8(t.Attributes)
    w.WriteBytes(t.Key)
    w.WriteBytes(t.Value)
}&lt;/pre&gt;&lt;/div&gt;
  

      
      &lt;/article&gt;
  
  
  
      &lt;article&gt;
      
        &lt;h3&gt;Broker&lt;/h3&gt;
        
  
  &lt;p&gt;
    Kafka Wire Protocol:
  &lt;/p&gt;
  

  
  &lt;p&gt;
    &amp;#34;It should not generally be necessary to maintain multiple connections to a single broker from a single client instance (i.e. connection pooling)&amp;#34;
  &lt;/p&gt;
  

  
  &lt;p&gt;
    &amp;#34;Clients can (and ideally should) use non-blocking IO to implement request pipelining and achieve higher throughput&amp;#34;
  &lt;/p&gt;
  

&lt;div class=&#34;image&#34;&gt;
  &lt;img src=&#34;http://h12.me/img/kpax/async-io.png&#34; height=&#34;250&#34;&gt;
&lt;/div&gt;

      
      &lt;/article&gt;
  
  
  
      &lt;article&gt;
      
        &lt;h2&gt;Wrap It Up&lt;/h2&gt;
      
      &lt;/article&gt;
  
  
  
      &lt;article&gt;
      
        &lt;h3&gt;Code Organization&lt;/h3&gt;
        
  
  &lt;p&gt;
    Modular and reusable sub-packages:
  &lt;/p&gt;
  

  
  &lt;div class=&#34;code&#34;&gt;&lt;pre&gt;h12.me/kpax/
    proto
    broker
    cluster
    producer
    consumer
    log&lt;/pre&gt;&lt;/div&gt;
  

      
      &lt;/article&gt;
  
  
  
      &lt;article&gt;
      
        &lt;h3&gt;A Simple &amp;amp; Naive Approach&lt;/h3&gt;
        
  
  &lt;p&gt;
    Broker &amp;gt; Cluster &amp;gt; Producer
  &lt;/p&gt;
  

  
  &lt;p&gt;
    Produce Methods:
  &lt;/p&gt;
  

  
  &lt;div class=&#34;code&#34;&gt;&lt;pre&gt;func (b *Broker) Produce(.......)
func (b *Cluster) Produce(.......)
func (b *Producer) Produce(.......)&lt;/pre&gt;&lt;/div&gt;
  

  
  &lt;p&gt;
    Constructers:
  &lt;/p&gt;
  

  
  &lt;div class=&#34;code&#34;&gt;&lt;pre&gt;broker.New(cfg *BrokerConfig)
cluster.New(cfg *ClusterConfig)
producer.New(cfg *ProducerConfig)&lt;/pre&gt;&lt;/div&gt;
  

  
  &lt;p&gt;
    Problems of this approach
  &lt;/p&gt;
  

  &lt;ul&gt;
  
    &lt;li&gt;Duplicated code&lt;/li&gt;
  
    &lt;li&gt;Low and high level are tightly coupled&lt;/li&gt;
  
    &lt;li&gt;Policies in lower level components cannot be replaced&lt;/li&gt;
  
  &lt;/ul&gt;

      
      &lt;/article&gt;
  
  
  
      &lt;article&gt;
      
        &lt;h3&gt;Dependency Inversion Principle&lt;/h3&gt;
        
  
  &lt;p&gt;
    DIP:
  &lt;/p&gt;
  

  &lt;ul&gt;
  
    &lt;li&gt;High-level modules should not depend on low-level modules. Both should depend on abstractions.&lt;/li&gt;
  
    &lt;li&gt;Abstractions should not depend on details. Details should depend on abstractions.&lt;/li&gt;
  
  &lt;/ul&gt;

  
  &lt;p&gt;
    In our case:
  &lt;/p&gt;
  

  &lt;ul&gt;
  
    &lt;li&gt;Broker/Cluster level should not depend on protocol-level details&lt;/li&gt;
  
    &lt;li&gt;Protocol-level details should depend on abstract broker/cluster&lt;/li&gt;
  
  &lt;/ul&gt;

      
      &lt;/article&gt;
  
  
  
      &lt;article&gt;
      
        &lt;h3&gt;Abstraction&lt;/h3&gt;
        
  
  &lt;div class=&#34;code&#34;&gt;&lt;pre&gt;type Broker interface {
    Do(Request, Response) error
    Close()
}

type Cluster interface {
    Coordinator(group string) (Broker, error)
    CoordinatorIsDown(group string)
    Leader(topic string, partition int32) (Broker, error)
    LeaderIsDown(topic string, partition int32)
    Partitions(topic string) ([]int32, error)
}

type Request interface {
    Send(io.Writer) error
    ID() int32
    SetID(int32)
}

type Response interface {
    Receive(io.Reader) error
    ID() int32
}&lt;/pre&gt;&lt;/div&gt;
  

      
      &lt;/article&gt;
  
  
  
      &lt;article&gt;
      
        &lt;h3&gt;Details&lt;/h3&gt;
        
  
  &lt;p&gt;
    Payload.Produce
  &lt;/p&gt;
  

  
  &lt;div class=&#34;code&#34;&gt;&lt;pre&gt;func (p *Payload) Produce(c model.Cluster) error {
    leader, err := c.Leader(p.Topic, p.Partition)
    if err != nil {
        return err
    }
    if err := p.DoProduce(leader); err != nil {
        if IsNotLeader(err) {
            c.LeaderIsDown(p.Topic, p.Partition)
        }
        return err
    }
    return nil
}

func (p *Payload) DoProduce(b model.Broker) error {
    ......
    if err := b.Do(&amp;amp;req, &amp;amp;resp); err != nil {
        return err
    }
    ......
}&lt;/pre&gt;&lt;/div&gt;
  

      
      &lt;/article&gt;
  
  
  
      &lt;article&gt;
      
        &lt;h3&gt;Configuration&lt;/h3&gt;
        
  
  &lt;div class=&#34;code&#34;&gt;&lt;pre&gt;type Payload struct {
    Topic        string
    Partition    int32
    MessageSet   MessageSet
    RequiredAcks ProduceAckType
    AckTimeout   time.Duration
}

type Broker struct {
    Addr     string
    Timeout  time.Duration
}

type Producer struct {
    Cluster      model.Cluster
    RequiredAcks proto.ProduceAckType
    AckTimeout   time.Duration
}

NewCluster(newBroker NewBrokerFunc, brokers []string) model.Cluster&lt;/pre&gt;&lt;/div&gt;
  

  
  &lt;p&gt;
    &amp;#34;New&amp;#34; constructor returns an object with default configuration.
  &lt;/p&gt;
  

      
      &lt;/article&gt;
  
  
  
      &lt;article&gt;
      
        &lt;h3&gt;Command Line Tool&lt;/h3&gt;
        
  
  &lt;div class=&#34;code&#34;&gt;&lt;pre&gt;go install h12.me/kpax/cmd/kpax&lt;/pre&gt;&lt;/div&gt;
  

  
  &lt;p&gt;
    Sub-commands:
  &lt;/p&gt;
  

  &lt;ul&gt;
  
    &lt;li&gt;tail: print recent n messages&lt;/li&gt;
  
    &lt;li&gt;consume: print or count messages within a time range&lt;/li&gt;
  
    &lt;li&gt;produce: send a test message&lt;/li&gt;
  
    &lt;li&gt;offset: print latest/earliest/current offset&lt;/li&gt;
  
    &lt;li&gt;rollback: reset offset to a previous time&lt;/li&gt;
  
    &lt;li&gt;meta: print topic metadata&lt;/li&gt;
  
  &lt;/ul&gt;

      
      &lt;/article&gt;
  
  
  
      &lt;article&gt;
      
        &lt;h2&gt;Verification&lt;/h2&gt;
      
      &lt;/article&gt;
  
  
  
      &lt;article&gt;
      
        &lt;h3&gt;Unit Testing with Docker&lt;/h3&gt;
        
  
  &lt;p&gt;
    Using h12.me/realtest/kafka:
  &lt;/p&gt;
  

  
  &lt;div class=&#34;code&#34;&gt;&lt;pre&gt;func TestXXX(t *testing.T) {
    k, err := kafka.New()
    if err != nil {
        t.Fatal(err)
    }
    partitionCount := 2
    topic, err := k.NewRandomTopic(partitionCount)
    if err != nil {
        t.Fatal(err)
    }
    defer k.DeleteTopic(topic)

    // Your test code goes here
}&lt;/pre&gt;&lt;/div&gt;
  

      
      &lt;/article&gt;
  
  
  
      &lt;article&gt;
      
        &lt;h3&gt;Message Counting&lt;/h3&gt;
        
  
  &lt;p&gt;
    Manual checking:
  &lt;/p&gt;
  

  &lt;ul&gt;
  
    &lt;li&gt;use kpax command line tool&lt;/li&gt;
  
  &lt;/ul&gt;

  
  &lt;p&gt;
    Continuous monitoring:
  &lt;/p&gt;
  

  &lt;ul&gt;
  
    &lt;li&gt;Consume and count all messages&lt;/li&gt;
  
    &lt;li&gt;Collect statistics from API&lt;/li&gt;
  
    &lt;li&gt;Send all the statistics to InfluxDB&lt;/li&gt;
  
    &lt;li&gt;Visualize and compare with Grafana&lt;/li&gt;
  
  &lt;/ul&gt;

      
      &lt;/article&gt;
  
  
  
      &lt;article&gt;
      
        &lt;h2&gt;Some Thoughts on Messaging System&lt;/h2&gt;
      
      &lt;/article&gt;
  
  
  
      &lt;article&gt;
      
        &lt;h3&gt;When a Messaging System could be Overkill?&lt;/h3&gt;
        
  &lt;ul&gt;
  
    &lt;li&gt;Data is disposable&lt;/li&gt;
  
    &lt;li&gt;Asynchronous: goroutine&lt;/li&gt;
  
    &lt;li&gt;Batch buffer: buffered channel&lt;/li&gt;
  
    &lt;li&gt;Decoupling: backend API&lt;/li&gt;
  
    &lt;li&gt;Resiliency/Scalability: distributed backend API&lt;/li&gt;
  
  &lt;/ul&gt;

      
      &lt;/article&gt;
  
  
  
      &lt;article&gt;
      
        &lt;h3&gt;When a Messaging System INDEED useful?&lt;/h3&gt;
        
  &lt;ul&gt;
  
    &lt;li&gt;Delivery guarantees: provide &amp;#34;commit&amp;#34; semantics to the writer (i.e. acknowledging only when your write guaranteed not to be lost)&lt;/li&gt;
  
    &lt;li&gt;Order guarantees: handle data consistency by sequencing concurrent updates to nodes&lt;/li&gt;
  
    &lt;li&gt;Multiple subscribers: provide the external data subscription feed from the system&lt;/li&gt;
  
  &lt;/ul&gt;

      
      &lt;/article&gt;
  
  
  
      &lt;article&gt;
      
        &lt;h3&gt;How to achieve reliable persistence?&lt;/h3&gt;
        
  
  &lt;p&gt;
    Crash consistency is hard but possible at a huge performance cost (fsync)
  &lt;/p&gt;
  

  
  &lt;p&gt;
    To get short response time, perhaps we should either give up persistence,
  &lt;/p&gt;
  

  
  &lt;p&gt;
    or we could just give up manual fsync and rely on replication:
  &lt;/p&gt;
  

  &lt;ul&gt;
  
    &lt;li&gt;OS background flush&lt;/li&gt;
  
    &lt;li&gt;replication&lt;/li&gt;
  
    &lt;li&gt;corruption detection &amp;amp; correction at startup&lt;/li&gt;
  
  &lt;/ul&gt;

      
      &lt;/article&gt;
  
  

      &lt;article&gt;
        &lt;h3&gt;Thank you&lt;/h3&gt;
        
          &lt;div class=&#34;presenter&#34;&gt;
            
  
  &lt;p&gt;
    Wáng Hǎiliàng
  &lt;/p&gt;
  

  
  &lt;p&gt;
    Gopher at Appcoach
  &lt;/p&gt;
  
&lt;p class=&#34;link&#34;&gt;&lt;a href=&#34;mailto:w@h12.me&#34; target=&#34;_blank&#34;&gt;w@h12.me&lt;/a&gt;&lt;/p&gt;
          &lt;/div&gt;
        
      &lt;/article&gt;

    &lt;/section&gt;

    

</description>
    </item>
    
    <item>
      <title>Counting Word Frequencies in One Line</title>
      <link>http://h12.me/note/count-word-freq/</link>
      <pubDate>Tue, 09 Aug 2016 18:31:04 +0800</pubDate>
      
      <guid>http://h12.me/note/count-word-freq/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cat book.txt | \
tr &#39;!()[]{};:&amp;quot;,&amp;lt;.&amp;gt;?“”‘’*/\r&#39; &#39; &#39; | \
tr &#39; &#39; &#39;\n&#39; | \
grep -a -P &amp;quot;^[\p{L}\p{N}\-&#39;]+\$&amp;quot; | \
grep -a -P -v &amp;quot;^[\p{N}\-&#39;]+\$&amp;quot; | \
sed &amp;quot;s/&#39;s\$//&amp;quot; | \
sed &amp;quot;s/^&#39;//&amp;quot; | sed &amp;quot;s/&#39;\$//&amp;quot; &amp;gt; words.txt

cat words.txt | \
sort | uniq -c | \
sort -nr | \
cut -c9- &amp;gt; words_desc.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;replace punctuations with space; remove &lt;code&gt;\r&lt;/code&gt; from `\r\n&amp;rsquo;&lt;/li&gt;
&lt;li&gt;one word per line&lt;/li&gt;
&lt;li&gt;keep only words composed of unicode letters, numbers, hyphen and apostrophe&lt;/li&gt;
&lt;li&gt;remove pure numbers&lt;/li&gt;
&lt;li&gt;remove &amp;rsquo;s&lt;/li&gt;
&lt;li&gt;remove starting and ending apostrophe&lt;/li&gt;

&lt;li&gt;&lt;p&gt;output words.txt&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;sort and count unique words&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;sort by freqency in descending order&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;trim the frequency column&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>A Note on Mobi Format</title>
      <link>http://h12.me/note/mobi/</link>
      <pubDate>Wed, 03 Aug 2016 08:51:30 +0800</pubDate>
      
      <guid>http://h12.me/note/mobi/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;Mobi Format Description: &lt;a href=&#34;http://wiki.mobileread.com/wiki/MOBI&#34;&gt;http://wiki.mobileread.com/wiki/MOBI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Python lib: &lt;a href=&#34;https://github.com/kroo/mobi-python&#34;&gt;https://github.com/kroo/mobi-python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>A Manager&#39;s FAQ</title>
      <link>http://h12.me/note/manager-faq/</link>
      <pubDate>Sun, 03 Jul 2016 21:16:34 +0800</pubDate>
      
      <guid>http://h12.me/note/manager-faq/</guid>
      <description>&lt;p&gt;This is an &lt;a href=&#34;https://readthink.com/a-managers-faq-35858a229f84#.7a4wlb9qy&#34;&gt;insightful list&lt;/a&gt;
from &lt;a href=&#34;Henry Ward&#34;&gt;Henry Ward&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;How do I get employees to perform better?&lt;/strong&gt; Tell them what they are doing well.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;How do I give negative feedback?&lt;/strong&gt; By being curious.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;How do I decide what to delegate?&lt;/strong&gt; Delegate the work you want to do.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;How should I prioritize?&lt;/strong&gt; Fix problems. Then prevent problems.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;How should I grade employees?&lt;/strong&gt; Don’t. Teach them to self-evaluate.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;When do I fire somebody?&lt;/strong&gt; When you know they can’t succeed.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;How do I fire somebody?&lt;/strong&gt; By apologizing for our failures.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Why can’t I just tell people what to do?&lt;/strong&gt; Because the more responsibility you have, the less authority you have.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;How do I know if I am a good manager?&lt;/strong&gt; Employees ask you for advice.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;How do I know if I have good management team?&lt;/strong&gt; Shit rolls uphill.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>On Reliable Persistence</title>
      <link>http://h12.me/note/on-reliable-persistence/</link>
      <pubDate>Sat, 02 Jul 2016 19:03:40 +0800</pubDate>
      
      <guid>http://h12.me/note/on-reliable-persistence/</guid>
      <description>&lt;p&gt;A short investigation on reliable persistence:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Crash consistency is &lt;a href=&#34;http://danluu.com/file-consistency/&#34;&gt;hard&lt;/a&gt; but
&lt;a href=&#34;https://www.flamingspork.com/talks/&#34;&gt;possible&lt;/a&gt; at a huge performance
&lt;a href=&#34;https://www.google.com/#q=fsync+performance&#34;&gt;cost&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Data safty must rely on distributed solution&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://raft.github.io&#34;&gt;Raft&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Perhaps we should just give up manual fsync and rely on&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;OS background flush&lt;/li&gt;
&lt;li&gt;corruption detection &amp;amp; correction at startup&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://kafka.apache.org/08/ops.html&#34;&gt;replication&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Note on OpenWRT</title>
      <link>http://h12.me/note/openwrt-note/</link>
      <pubDate>Sat, 27 Feb 2016 14:59:54 +0800</pubDate>
      
      <guid>http://h12.me/note/openwrt-note/</guid>
      <description>

&lt;h2 id=&#34;obtain-openwrt:fba9a0f50fdb02ecc398287f8a6d0f68&#34;&gt;Obtain OpenWRT&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Find the device model at the &lt;a href=&#34;https://wiki.openwrt.org/toh/start&#34;&gt;Table of Hardware&lt;/a&gt; (Huawei HG556a C)&lt;/li&gt;
&lt;li&gt;Open &lt;em&gt;Device Techdata&lt;/em&gt; for &lt;em&gt;Firmware OpenWrt Install URL&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Open &lt;em&gt;Device Page&lt;/em&gt; for &lt;em&gt;Installation&lt;/em&gt; instructions&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;computer-cable-router:fba9a0f50fdb02ecc398287f8a6d0f68&#34;&gt;Computer - Cable - Router&lt;/h2&gt;

&lt;p&gt;Connect the computer to the router with a cable.&lt;/p&gt;

&lt;h2 id=&#34;install-openwrt:fba9a0f50fdb02ecc398287f8a6d0f68&#34;&gt;Install OpenWRT&lt;/h2&gt;

&lt;p&gt;Follow the instructions to install OpenWRT.&lt;/p&gt;

&lt;h2 id=&#34;ssh:fba9a0f50fdb02ecc398287f8a6d0f68&#34;&gt;SSH&lt;/h2&gt;

&lt;p&gt;First login:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;telnet 192.168.1.1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Change password to enable SSH:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;passwd
exit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For public key authentication, add the public key:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ssh-copy-id root@192.168.1.1
ssh root@192.168.1.1
mv ~/.ssh/authorized_keys /etc/dropbear
exit
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;wifi:fba9a0f50fdb02ecc398287f8a6d0f68&#34;&gt;WiFi&lt;/h2&gt;

&lt;p&gt;In &lt;code&gt;/etc/config/wireless&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;config wifi-device  radio0
	......
	# REMOVE THIS LINE TO ENABLE WIFI:
	# option disabled 1

config wifi-iface
	option device     radio0
	option network    lan
	option mode       ap
	option encryption psk2
	option hidden     1
	option ssid       [SSID]
	option key        [WiFi password]
	option macaddr    [00:0A:4B:3C:6D:02]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Execute:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wifi
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;computer-wifi-router:fba9a0f50fdb02ecc398287f8a6d0f68&#34;&gt;Computer - WiFi - Router&lt;/h2&gt;

&lt;p&gt;Disconnect the cable to the router. Try SSH via WiFi.&lt;/p&gt;

&lt;h2 id=&#34;internet:fba9a0f50fdb02ecc398287f8a6d0f68&#34;&gt;Internet&lt;/h2&gt;

&lt;p&gt;In &lt;code&gt;/etc/config/network&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;It is better to change the lan address so that it will not be conflicted with the upstream address.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;config interface &#39;lan&#39;
	option ipaddr &#39;192.168.2.1&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;# lan switch
config switch_vlan
	option device 	eth0
	option vlan 	1
	option ports 	&amp;quot;1 2 5t&amp;quot;

# wan switch
config switch_vlan
	option device 	eth0
	option vlan 	2
	option ports 	&amp;quot;0 5t&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For DHCP wan:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;config interface wan
	option ifname eth0.2
	option proto  dhcp
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For PPPOE wan:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;config interface wan
	option ifname   eth0.2
	option proto    pppoe
	option username [PPPOE user name]
	option password [password]
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;computer-wifi-router-cable-internet:fba9a0f50fdb02ecc398287f8a6d0f68&#34;&gt;Computer - WiFi - Router - Cable - Internet&lt;/h2&gt;

&lt;p&gt;Connect the internet cable to the router, reboot the router.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>About Pretty Printing</title>
      <link>http://h12.me/note/about-pretty-print/</link>
      <pubDate>Mon, 01 Feb 2016 18:11:29 +0800</pubDate>
      
      <guid>http://h12.me/note/about-pretty-print/</guid>
      <description>

&lt;h2 id=&#34;json:1197732d8fa443c2a3177ffc1bd0267c&#34;&gt;JSON&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cat xxx.json | jq .
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;xml:1197732d8fa443c2a3177ffc1bd0267c&#34;&gt;XML&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cat xxx.xml | xmllint --format -
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Sending Email from Gmail using Go</title>
      <link>http://h12.me/note/send-email-from-gmail/</link>
      <pubDate>Sun, 31 Jan 2016 20:31:06 +0800</pubDate>
      
      <guid>http://h12.me/note/send-email-from-gmail/</guid>
      <description>&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Turn on &lt;a href=&#34;http://accounts.google.com/SmsAuthConfig&#34;&gt;&amp;ldquo;2-Step Verification&amp;rdquo;&lt;/a&gt; so
that an &lt;a href=&#34;https://security.google.com/settings/security/apppasswords&#34;&gt;&amp;ldquo;App password&amp;rdquo;&lt;/a&gt; can be generated&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;go get gopkg.in/gomail.v2&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Send your Email like the example below:&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main

import (
	&amp;quot;gopkg.in/gomail.v2&amp;quot;
)

func main() {
	m := gomail.NewMessage()
	m.SetHeader(&amp;quot;From&amp;quot;, &amp;quot;from_address@gmail.com&amp;quot;)
	m.SetAddressHeader(&amp;quot;To&amp;quot;, &amp;quot;to_adress@xxx&amp;quot;, &amp;quot;to_name&amp;quot;)
	m.SetAddressHeader(&amp;quot;Cc&amp;quot;, &amp;quot;cc_adress@xxx&amp;quot;, &amp;quot;cc_name&amp;quot;)
	m.SetHeader(&amp;quot;Subject&amp;quot;, &amp;quot;Hello! TEST!&amp;quot;)
	m.SetBody(&amp;quot;text/html&amp;quot;, &amp;quot;Hello! &amp;lt;b&amp;gt;TEST&amp;lt;/b&amp;gt;!&amp;quot;)

	d := gomail.NewPlainDialer(&amp;quot;smtp.gmail.com&amp;quot;, 587, &amp;quot;from_address@gmail.com&amp;quot;, &amp;quot;the App password&amp;quot;)

	if err := d.DialAndSend(m); err != nil {
		panic(err)
	}
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>SSH Resources in Go</title>
      <link>http://h12.me/note/go-ssh-resources/</link>
      <pubDate>Sun, 31 Jan 2016 14:49:01 +0800</pubDate>
      
      <guid>http://h12.me/note/go-ssh-resources/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;golang.org/x/crypto/ssh&lt;/li&gt;
&lt;li&gt;github.com/YuriyNasretdinov/GoSSHa&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Articles:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.ralch.com/tutorial/golang-ssh-connection/&#34;&gt;SSH Client connection in Golang&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://kukuruku.co/hub/golang/ssh-commands-execution-on-hundreds-of-servers-via-go&#34;&gt;Using Go to Execute Commands on Hundreds of Servers with SSH&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>RealTest: real test environment for Go</title>
      <link>http://h12.me/project/realtest/</link>
      <pubDate>Sat, 14 Nov 2015 13:57:09 +0800</pubDate>
      
      <guid>http://h12.me/project/realtest/</guid>
      <description>

&lt;p&gt;h12.me/realtest provides real test environment for Go unit testing, based on Docker.&lt;/p&gt;

&lt;p&gt;Includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Queue

&lt;ul&gt;
&lt;li&gt;Kafka cluster (with zookeeper)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Database:

&lt;ul&gt;
&lt;li&gt;MySQL&lt;/li&gt;
&lt;li&gt;MongoDB&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Cache

&lt;ul&gt;
&lt;li&gt;Redis&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Configuration service

&lt;ul&gt;
&lt;li&gt;ZooKeeper&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;author:392938f6c0ed47446e9bccc40e79ace3&#34;&gt;Author&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/h12w&#34;&gt;Hǎiliàng Wáng&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;contributors:392938f6c0ed47446e9bccc40e79ace3&#34;&gt;Contributors&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/AnotherGoogleFans&#34;&gt;Tao Huang&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Aliyun OSS Go SDK</title>
      <link>http://h12.me/project/aliyun-oss-go-sdk/</link>
      <pubDate>Thu, 22 Oct 2015 15:32:58 +0800</pubDate>
      
      <guid>http://h12.me/project/aliyun-oss-go-sdk/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://drone.io/github.com/h12w/aliyun-oss-go-sdk/latest&#34;&gt;&lt;img src=&#34;https://drone.io/github.com/h12w/aliyun-oss-go-sdk/status.png&#34; alt=&#34;Build
Status&#34; /&gt;
&lt;/a&gt;
&lt;a href=&#34;https://coveralls.io/github/h12w/aliyun-oss-go-sdk?branch=master&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/h12w/aliyun-oss-go-sdk/badge.svg?branch=master&amp;amp;service=github&#34; alt=&#34;Coverage
Status&#34; /&gt;
&lt;/a&gt;
&lt;a href=&#34;https://godoc.org/github.com/aliyun/aliyun-oss-go-sdk/oss&#34;&gt;&lt;img src=&#34;https://godoc.org/github.com/aliyun/aliyun-oss-go-sdk/oss?status.svg&#34; alt=&#34;GoDoc&#34; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Aliyun OSS (Object Storage Service) Go SDK is a client SDK to access Aliyun OSS
API, implemented in the Go programming language.&lt;/p&gt;

&lt;h2 id=&#34;installation:f87687907588b3c94606277d316d7263&#34;&gt;Installation&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go get -u github.com/aliyun/aliyun-oss-go-sdk/oss
go test -v -cover github.com/aliyun/aliyun-oss-go-sdk/oss
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;highlights:f87687907588b3c94606277d316d7263&#34;&gt;Highlights&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Complete set of Aliyun OSS API&lt;/li&gt;
&lt;li&gt;Thouroughly tested

&lt;ul&gt;
&lt;li&gt;100% test coverage&lt;/li&gt;
&lt;li&gt;intuitive table driven tests&lt;/li&gt;
&lt;li&gt;full test suite completes within 2 seconds&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Lint clean

&lt;ul&gt;
&lt;li&gt;golint&lt;/li&gt;
&lt;li&gt;go fmt&lt;/li&gt;
&lt;li&gt;goimports&lt;/li&gt;
&lt;li&gt;go vet&lt;/li&gt;
&lt;li&gt;race detector&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Idiomatic &amp;amp; elegant

&lt;ul&gt;
&lt;li&gt;response is returned as a parsed object&lt;/li&gt;
&lt;li&gt;error is returned as a Go error&lt;/li&gt;
&lt;li&gt;named options for setting headers &amp;amp; parameters&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Great extensibility

&lt;ul&gt;
&lt;li&gt;clean and orthogonal implementation&lt;/li&gt;
&lt;li&gt;users can easily extend the SDK when a new API method is supported&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;No third party dependencies&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;documentation:f87687907588b3c94606277d316d7263&#34;&gt;Documentation&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;doc/overview.md&#34;&gt;Overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;doc/api-object.md&#34;&gt;API Object&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;doc/bucket.md&#34;&gt;Bucket&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;doc/object.md&#34;&gt;Object&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;doc/options.md&#34;&gt;Optional Headers and Parameters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;doc/upload.md&#34;&gt;Multipart Upload&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;doc/cors.md&#34;&gt;Cross-Origin Resource Sharing (CORS)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;doc/lifecycle.md&#34;&gt;Object Lifecycle Management&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;doc/extend.md&#34;&gt;Extending the SDK&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;differences-with-python-sdk:f87687907588b3c94606277d316d7263&#34;&gt;Differences with Python SDK&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;HTTP header User-Agent, e.g. aliyun-sdk-go/0.1.1 (Linux/3.16.0-51-generic/x86_64;go1.5.1)&lt;/li&gt;
&lt;li&gt;Go HTTP client does not support 100-Continue (will be supported after Go 1.6, see &lt;a href=&#34;https://github.com/golang/go/issues/3665&#34;&gt;https://github.com/golang/go/issues/3665&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;HTTP header keys are automatically converted into canonical format, e.g.
x-oss-acl becomes X-Oss-Acl&lt;/li&gt;
&lt;li&gt;Go GET request does not have redundant &amp;ldquo;Content-Length: 0&amp;rdquo; header&lt;/li&gt;
&lt;li&gt;Parameters will be omitted if the argument is not set&lt;/li&gt;
&lt;li&gt;Go always sends URL parameters and headers in canonical order&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;author:f87687907588b3c94606277d316d7263&#34;&gt;Author&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/h12w&#34;&gt;Hǎiliàng Wáng&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;license:f87687907588b3c94606277d316d7263&#34;&gt;License&lt;/h2&gt;

&lt;p&gt;licensed under the &lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0.html&#34;&gt;Apache License 2.0&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;references:f87687907588b3c94606277d316d7263&#34;&gt;References&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aliyun.com/#/pub/oss&#34;&gt;OSS Document (Chinese)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>How to Remove All Exited Containers &amp; Dangling Images for Docker?</title>
      <link>http://h12.me/note/remove-all-exited-docker-containers/</link>
      <pubDate>Mon, 03 Aug 2015 16:55:49 +0800</pubDate>
      
      <guid>http://h12.me/note/remove-all-exited-docker-containers/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker ps --quiet --filter=status=exited | xargs docker rm
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker images --no-trunc=true --filter=&amp;quot;dangling=true&amp;quot; --quiet=true | xargs docker rmi
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>kpax: a modular &amp; idiomatic Kafka client in Go</title>
      <link>http://h12.me/project/kpax/</link>
      <pubDate>Thu, 23 Jul 2015 13:36:25 +0800</pubDate>
      
      <guid>http://h12.me/project/kpax/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://godoc.org/h12.me/kpax&#34;&gt;&lt;img src=&#34;https://godoc.org/h12.me/kpax?status.svg&#34; alt=&#34;GoDoc&#34; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;install:3374022163a333dc756ef0f13859086d&#34;&gt;Install&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;go get -u h12.me/kpax
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;design:3374022163a333dc756ef0f13859086d&#34;&gt;Design&lt;/h2&gt;

&lt;p&gt;The client is built on top of Kafka Wire Protocol (i.e. low-level API). The protocol related types &amp;amp; marshal/unmarshal functions are automatically generated by &lt;a href=&#34;https://github.com/h12w/wipro&#34;&gt;wipro&lt;/a&gt; from &lt;a href=&#34;https://cwiki.apache.org/confluence/display/KAFKA/A+Guide+To+The+Kafka+Protocol&#34;&gt;the HTML spec&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;&lt;code&gt;(-)&lt;/code&gt; means to be done.&lt;/p&gt;

&lt;h3 id=&#34;sub-packages:3374022163a333dc756ef0f13859086d&#34;&gt;Sub packages&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;model&lt;/strong&gt; is an abstraction model for request, response, broker and cluster&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;broker&lt;/strong&gt; is a lazy, asynchronous and recoverable round tripper that talks to a single Kafka broker&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;cluster&lt;/strong&gt; is a metadata manager that talks to a Kafka cluster&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;proto&lt;/strong&gt; contains both low level API and a &amp;ldquo;middle&amp;rdquo; level facade&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;producer&lt;/strong&gt;: fault tolerant high-level producer (batching and partitioning strategy)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;consumer&lt;/strong&gt;: fault tolerant high-level consumer (consumer group and offset commit)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;log&lt;/strong&gt;: replaceable global logger&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;cmd&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;kpax&lt;/strong&gt;: command line tool to help with Kafka programming&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;compatibility:3374022163a333dc756ef0f13859086d&#34;&gt;Compatibility&lt;/h3&gt;

&lt;p&gt;Compatible with Kafka Server 0.8.2.&lt;/p&gt;

&lt;h3 id=&#34;error-handling:3374022163a333dc756ef0f13859086d&#34;&gt;Error Handling&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;broker

&lt;ul&gt;
&lt;li&gt;fail fast: timeout returns error immediately&lt;/li&gt;
&lt;li&gt;release resources carefully&lt;/li&gt;
&lt;li&gt;reconnect when requested next time&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;client

&lt;ul&gt;
&lt;li&gt;metadata reload lazily (only when a leader/coordinator cannot be found in cache)&lt;/li&gt;
&lt;li&gt;leader/coordinator should be deleted on error&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;producer

&lt;ul&gt;
&lt;li&gt;fail over to another partition&lt;/li&gt;
&lt;li&gt;failed partition will be retried again after a period of time&lt;/li&gt;
&lt;li&gt;partition expand (-)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;consumer

&lt;ul&gt;
&lt;li&gt;just loop &amp;amp; wait on error&lt;/li&gt;
&lt;li&gt;partition expand (-)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;graceful shutdown (-)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;efficiency:3374022163a333dc756ef0f13859086d&#34;&gt;Efficiency&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;efficiency

&lt;ul&gt;
&lt;li&gt;batching&lt;/li&gt;
&lt;li&gt;consumer response&lt;/li&gt;
&lt;li&gt;consumer request (-)&lt;/li&gt;
&lt;li&gt;producer (-)&lt;/li&gt;
&lt;li&gt;decompression&lt;/li&gt;
&lt;li&gt;snappy&lt;/li&gt;
&lt;li&gt;gzip (-)&lt;/li&gt;
&lt;li&gt;compression&lt;/li&gt;
&lt;li&gt;snappy (-)&lt;/li&gt;
&lt;li&gt;gzip (-)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;author:3374022163a333dc756ef0f13859086d&#34;&gt;Author&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/h12w&#34;&gt;Hǎiliàng Wáng&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;contributors:3374022163a333dc756ef0f13859086d&#34;&gt;Contributors&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/AnotherGoogleFans&#34;&gt;Tao Huang&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>