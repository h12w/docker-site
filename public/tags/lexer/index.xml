<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lexer on h12</title>
    <link>http://h12.io/tags/lexer/</link>
    <description>Recent content in Lexer on h12</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>Copyright (c) 2012-2018, Wáng Hǎiliàng (Hal); all rights reserved.</copyright>
    <lastBuildDate>Thu, 07 Aug 2014 00:00:00 +0800</lastBuildDate>
    
	<atom:link href="http://h12.io/tags/lexer/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Gombi: Creating Your Own Parser is Easier than Regular Expressions</title>
      <link>http://h12.io/project/gombi/</link>
      <pubDate>Thu, 07 Aug 2014 00:00:00 +0800</pubDate>
      
      <guid>http://h12.io/project/gombi/</guid>
      <description>Gombi is a combinator-style scanner &amp;amp; parser library written in Go. It is practical, reasonably fast and extremely easy to use.
Quick start go get -u h12.io/gombi  Design Combinator parsers are straightforward to construct, modular and easily maintainable, compared to parser generators like Lex/Yacc.
 Internal DSL  no additional code generation and compilation.  Composable  a subset of the syntax tree is also a parser. a language can be easily embedded into another one.</description>
    </item>
    
  </channel>
</rss>