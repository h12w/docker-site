<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Notes on h12.me</title>
    <link>http://h12.me/note/</link>
    <description>Recent content in Notes on h12.me</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright (c) 2012-2016, Hǎiliàng Wáng; all rights reserved.</copyright>
    <lastBuildDate>Sun, 09 Apr 2017 14:30:03 +0800</lastBuildDate>
    <atom:link href="http://h12.me/note/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>A Single Command to Download a Website</title>
      <link>http://h12.me/note/download-website/</link>
      <pubDate>Sun, 09 Apr 2017 14:30:03 +0800</pubDate>
      
      <guid>http://h12.me/note/download-website/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget --recursive --level=2 --no-parent --no-clobber --convert-links --continue
[URL]
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>How to Remove Old Kernels in Ubuntu</title>
      <link>http://h12.me/note/ubuntu-remove-old-kernels/</link>
      <pubDate>Sat, 10 Sep 2016 09:08:10 +0800</pubDate>
      
      <guid>http://h12.me/note/ubuntu-remove-old-kernels/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt install byobu
sudo purge-old-kernels
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Reference:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Remove Old Kernels (&lt;a href=&#34;https://help.ubuntu.com/community/Lubuntu/Documentation/RemoveOldKernels&#34;&gt;https://help.ubuntu.com/community/Lubuntu/Documentation/RemoveOldKernels&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Making Code Block Wrap in Jira</title>
      <link>http://h12.me/note/make-jira-code-wrap/</link>
      <pubDate>Mon, 05 Sep 2016 10:30:49 +0800</pubDate>
      
      <guid>http://h12.me/note/make-jira-code-wrap/</guid>
      <description>&lt;p&gt;It is a hack.&lt;/p&gt;

&lt;p&gt;Set Jira Administration -&amp;gt; System -&amp;gt; Announcement Banner -&amp;gt; Announcement:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;&amp;lt;style type=&amp;quot;text/css&amp;quot;&amp;gt;
pre {
    white-space: pre-wrap!important;
}
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>One-liner to check MongoDB Connections</title>
      <link>http://h12.me/note/mongodb-conn/</link>
      <pubDate>Fri, 02 Sep 2016 15:40:41 +0800</pubDate>
      
      <guid>http://h12.me/note/mongodb-conn/</guid>
      <description>&lt;pre&gt;&lt;code&gt;mongo --eval &amp;quot;JSON.stringify(db.currentOp(true))&amp;quot; | \
tail -n +3 | \
jq -r .inprog[].client | \
sed &#39;s/\(.*\):.*/\1/&#39; \
| sort | uniq -c | sort -nr
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;dump connection information in standard JSON format&lt;/li&gt;
&lt;li&gt;remove MongoDB header&lt;/li&gt;
&lt;li&gt;extract IP:port as a list&lt;/li&gt;
&lt;li&gt;trim port&lt;/li&gt;
&lt;li&gt;sort IPs by freqencies&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Counting Word Frequencies in One Line</title>
      <link>http://h12.me/note/count-word-freq/</link>
      <pubDate>Tue, 09 Aug 2016 18:31:04 +0800</pubDate>
      
      <guid>http://h12.me/note/count-word-freq/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cat book.txt | \
tr &#39;!()[]{};:&amp;quot;,&amp;lt;.&amp;gt;?“”‘’*/\r&#39; &#39; &#39; | \
tr &#39; &#39; &#39;\n&#39; | \
grep -a -P &amp;quot;^[\p{L}\p{N}\-&#39;]+\$&amp;quot; | \
grep -a -P -v &amp;quot;^[\p{N}\-&#39;]+\$&amp;quot; | \
sed &amp;quot;s/&#39;s\$//&amp;quot; | \
sed &amp;quot;s/^&#39;//&amp;quot; | sed &amp;quot;s/&#39;\$//&amp;quot; &amp;gt; words.txt

cat words.txt | \
sort | uniq -c | \
sort -nr | \
cut -c9- &amp;gt; words_desc.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;replace punctuations with space; remove &lt;code&gt;\r&lt;/code&gt; from `\r\n&amp;rsquo;&lt;/li&gt;
&lt;li&gt;one word per line&lt;/li&gt;
&lt;li&gt;keep only words composed of unicode letters, numbers, hyphen and apostrophe&lt;/li&gt;
&lt;li&gt;remove pure numbers&lt;/li&gt;
&lt;li&gt;remove &amp;rsquo;s&lt;/li&gt;
&lt;li&gt;remove starting and ending apostrophe&lt;/li&gt;

&lt;li&gt;&lt;p&gt;output words.txt&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;sort and count unique words&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;sort by freqency in descending order&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;trim the frequency column&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>A Note on Mobi Format</title>
      <link>http://h12.me/note/mobi/</link>
      <pubDate>Wed, 03 Aug 2016 08:51:30 +0800</pubDate>
      
      <guid>http://h12.me/note/mobi/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;Mobi Format Description: &lt;a href=&#34;http://wiki.mobileread.com/wiki/MOBI&#34;&gt;http://wiki.mobileread.com/wiki/MOBI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Python lib: &lt;a href=&#34;https://github.com/kroo/mobi-python&#34;&gt;https://github.com/kroo/mobi-python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>A Manager&#39;s FAQ</title>
      <link>http://h12.me/note/manager-faq/</link>
      <pubDate>Sun, 03 Jul 2016 21:16:34 +0800</pubDate>
      
      <guid>http://h12.me/note/manager-faq/</guid>
      <description>&lt;p&gt;This is an &lt;a href=&#34;https://readthink.com/a-managers-faq-35858a229f84#.7a4wlb9qy&#34;&gt;insightful list&lt;/a&gt;
from &lt;a href=&#34;Henry Ward&#34;&gt;Henry Ward&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;How do I get employees to perform better?&lt;/strong&gt; Tell them what they are doing well.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;How do I give negative feedback?&lt;/strong&gt; By being curious.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;How do I decide what to delegate?&lt;/strong&gt; Delegate the work you want to do.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;How should I prioritize?&lt;/strong&gt; Fix problems. Then prevent problems.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;How should I grade employees?&lt;/strong&gt; Don’t. Teach them to self-evaluate.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;When do I fire somebody?&lt;/strong&gt; When you know they can’t succeed.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;How do I fire somebody?&lt;/strong&gt; By apologizing for our failures.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Why can’t I just tell people what to do?&lt;/strong&gt; Because the more responsibility you have, the less authority you have.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;How do I know if I am a good manager?&lt;/strong&gt; Employees ask you for advice.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;How do I know if I have good management team?&lt;/strong&gt; Shit rolls uphill.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>On Reliable Persistence</title>
      <link>http://h12.me/note/on-reliable-persistence/</link>
      <pubDate>Sat, 02 Jul 2016 19:03:40 +0800</pubDate>
      
      <guid>http://h12.me/note/on-reliable-persistence/</guid>
      <description>&lt;p&gt;A short investigation on reliable persistence:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Crash consistency is &lt;a href=&#34;http://danluu.com/file-consistency/&#34;&gt;hard&lt;/a&gt; but
&lt;a href=&#34;https://www.flamingspork.com/talks/&#34;&gt;possible&lt;/a&gt; at a huge performance
&lt;a href=&#34;https://www.google.com/#q=fsync+performance&#34;&gt;cost&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Data safty must rely on distributed solution&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://raft.github.io&#34;&gt;Raft&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Perhaps we should just give up manual fsync and rely on&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;OS background flush&lt;/li&gt;
&lt;li&gt;corruption detection &amp;amp; correction at startup&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://kafka.apache.org/08/ops.html&#34;&gt;replication&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Note on OpenWRT</title>
      <link>http://h12.me/note/openwrt-note/</link>
      <pubDate>Sat, 27 Feb 2016 14:59:54 +0800</pubDate>
      
      <guid>http://h12.me/note/openwrt-note/</guid>
      <description>

&lt;h2 id=&#34;obtain-openwrt:fba9a0f50fdb02ecc398287f8a6d0f68&#34;&gt;Obtain OpenWRT&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Find the device model at the &lt;a href=&#34;https://wiki.openwrt.org/toh/start&#34;&gt;Table of Hardware&lt;/a&gt; (Huawei HG556a C)&lt;/li&gt;
&lt;li&gt;Open &lt;em&gt;Device Techdata&lt;/em&gt; for &lt;em&gt;Firmware OpenWrt Install URL&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Open &lt;em&gt;Device Page&lt;/em&gt; for &lt;em&gt;Installation&lt;/em&gt; instructions&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;computer-cable-router:fba9a0f50fdb02ecc398287f8a6d0f68&#34;&gt;Computer - Cable - Router&lt;/h2&gt;

&lt;p&gt;Connect the computer to the router with a cable.&lt;/p&gt;

&lt;h2 id=&#34;install-openwrt:fba9a0f50fdb02ecc398287f8a6d0f68&#34;&gt;Install OpenWRT&lt;/h2&gt;

&lt;p&gt;Follow the instructions to install OpenWRT.&lt;/p&gt;

&lt;h2 id=&#34;ssh:fba9a0f50fdb02ecc398287f8a6d0f68&#34;&gt;SSH&lt;/h2&gt;

&lt;p&gt;First login:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;telnet 192.168.1.1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Change password to enable SSH:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;passwd
exit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For public key authentication, add the public key:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ssh-copy-id root@192.168.1.1
ssh root@192.168.1.1
mv ~/.ssh/authorized_keys /etc/dropbear
exit
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;wifi:fba9a0f50fdb02ecc398287f8a6d0f68&#34;&gt;WiFi&lt;/h2&gt;

&lt;p&gt;In &lt;code&gt;/etc/config/wireless&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;config wifi-device  radio0
	......
	# REMOVE THIS LINE TO ENABLE WIFI:
	# option disabled 1

config wifi-iface
	option device     radio0
	option network    lan
	option mode       ap
	option encryption psk2
	option hidden     1
	option ssid       [SSID]
	option key        [WiFi password]
	option macaddr    [00:0A:4B:3C:6D:02]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Execute:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wifi
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;computer-wifi-router:fba9a0f50fdb02ecc398287f8a6d0f68&#34;&gt;Computer - WiFi - Router&lt;/h2&gt;

&lt;p&gt;Disconnect the cable to the router. Try SSH via WiFi.&lt;/p&gt;

&lt;h2 id=&#34;internet:fba9a0f50fdb02ecc398287f8a6d0f68&#34;&gt;Internet&lt;/h2&gt;

&lt;p&gt;In &lt;code&gt;/etc/config/network&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;It is better to change the lan address so that it will not be conflicted with the upstream address.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;config interface &#39;lan&#39;
	option ipaddr &#39;192.168.2.1&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;# lan switch
config switch_vlan
	option device 	eth0
	option vlan 	1
	option ports 	&amp;quot;1 2 5t&amp;quot;

# wan switch
config switch_vlan
	option device 	eth0
	option vlan 	2
	option ports 	&amp;quot;0 5t&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For DHCP wan:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;config interface wan
	option ifname eth0.2
	option proto  dhcp
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For PPPOE wan:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;config interface wan
	option ifname   eth0.2
	option proto    pppoe
	option username [PPPOE user name]
	option password [password]
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;computer-wifi-router-cable-internet:fba9a0f50fdb02ecc398287f8a6d0f68&#34;&gt;Computer - WiFi - Router - Cable - Internet&lt;/h2&gt;

&lt;p&gt;Connect the internet cable to the router, reboot the router.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>About Pretty Printing</title>
      <link>http://h12.me/note/about-pretty-print/</link>
      <pubDate>Mon, 01 Feb 2016 18:11:29 +0800</pubDate>
      
      <guid>http://h12.me/note/about-pretty-print/</guid>
      <description>

&lt;h2 id=&#34;json:1197732d8fa443c2a3177ffc1bd0267c&#34;&gt;JSON&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cat xxx.json | jq .
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;xml:1197732d8fa443c2a3177ffc1bd0267c&#34;&gt;XML&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cat xxx.xml | xmllint --format -
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Sending Email from Gmail using Go</title>
      <link>http://h12.me/note/send-email-from-gmail/</link>
      <pubDate>Sun, 31 Jan 2016 20:31:06 +0800</pubDate>
      
      <guid>http://h12.me/note/send-email-from-gmail/</guid>
      <description>&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Turn on &lt;a href=&#34;http://accounts.google.com/SmsAuthConfig&#34;&gt;&amp;ldquo;2-Step Verification&amp;rdquo;&lt;/a&gt; so
that an &lt;a href=&#34;https://security.google.com/settings/security/apppasswords&#34;&gt;&amp;ldquo;App password&amp;rdquo;&lt;/a&gt; can be generated&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;go get gopkg.in/gomail.v2&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Send your Email like the example below:&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main

import (
	&amp;quot;gopkg.in/gomail.v2&amp;quot;
)

func main() {
	m := gomail.NewMessage()
	m.SetHeader(&amp;quot;From&amp;quot;, &amp;quot;from_address@gmail.com&amp;quot;)
	m.SetAddressHeader(&amp;quot;To&amp;quot;, &amp;quot;to_adress@xxx&amp;quot;, &amp;quot;to_name&amp;quot;)
	m.SetAddressHeader(&amp;quot;Cc&amp;quot;, &amp;quot;cc_adress@xxx&amp;quot;, &amp;quot;cc_name&amp;quot;)
	m.SetHeader(&amp;quot;Subject&amp;quot;, &amp;quot;Hello! TEST!&amp;quot;)
	m.SetBody(&amp;quot;text/html&amp;quot;, &amp;quot;Hello! &amp;lt;b&amp;gt;TEST&amp;lt;/b&amp;gt;!&amp;quot;)

	d := gomail.NewPlainDialer(&amp;quot;smtp.gmail.com&amp;quot;, 587, &amp;quot;from_address@gmail.com&amp;quot;, &amp;quot;the App password&amp;quot;)

	if err := d.DialAndSend(m); err != nil {
		panic(err)
	}
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>SSH Resources in Go</title>
      <link>http://h12.me/note/go-ssh-resources/</link>
      <pubDate>Sun, 31 Jan 2016 14:49:01 +0800</pubDate>
      
      <guid>http://h12.me/note/go-ssh-resources/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;golang.org/x/crypto/ssh&lt;/li&gt;
&lt;li&gt;github.com/YuriyNasretdinov/GoSSHa&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Articles:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.ralch.com/tutorial/golang-ssh-connection/&#34;&gt;SSH Client connection in Golang&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://kukuruku.co/hub/golang/ssh-commands-execution-on-hundreds-of-servers-via-go&#34;&gt;Using Go to Execute Commands on Hundreds of Servers with SSH&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>How to Remove All Exited Containers &amp; Dangling Images for Docker?</title>
      <link>http://h12.me/note/remove-all-exited-docker-containers/</link>
      <pubDate>Mon, 03 Aug 2015 16:55:49 +0800</pubDate>
      
      <guid>http://h12.me/note/remove-all-exited-docker-containers/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker ps --quiet --filter=status=exited | xargs docker rm
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker images --no-trunc=true --filter=&amp;quot;dangling=true&amp;quot; --quiet=true | xargs docker rmi
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>A Comprehensive Note about Proxy Settings</title>
      <link>http://h12.me/note/proxy-notes/</link>
      <pubDate>Wed, 08 Jul 2015 07:58:34 +0000</pubDate>
      
      <guid>http://h12.me/note/proxy-notes/</guid>
      <description>

&lt;h2 id=&#34;git:98bdf1dc45f059ee4334ef1c195fb8bb&#34;&gt;Git&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&amp;gt; cat ~/.gitconfig
[http]
	proxy = socks5://[host]:[port]
[https]
	proxy = socks5://[host]:[port]
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;curl-homebrew:98bdf1dc45f059ee4334ef1c195fb8bb&#34;&gt;Curl (Homebrew)&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&amp;gt; cat ~/.curlrc
socks5 = &amp;quot;[host]:[port]&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;docker-pull:98bdf1dc45f059ee4334ef1c195fb8bb&#34;&gt;Docker pull&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-fish&#34;&gt;env HTTP_PROXY=http://xxx docker pull yyy
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;gae:98bdf1dc45f059ee4334ef1c195fb8bb&#34;&gt;GAE&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Set proxy&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export HTTP_PROXY http://[host]:[port]
export HTTPS_PROXY http://[host]:[port]
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Delete cacerts.txt under GAE SDK installation to disable SSL verification (
make sure the proxy is safe before this step).&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Deploy.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;appcfg.py . --email=[address] --passin
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Phonetic Notations</title>
      <link>http://h12.me/note/phonetic-notations/</link>
      <pubDate>Tue, 30 Jun 2015 12:43:19 +0800</pubDate>
      
      <guid>http://h12.me/note/phonetic-notations/</guid>
      <description>

&lt;h2 id=&#34;google-dictionary:94ca165df739a66252ddc3004eb84c61&#34;&gt;Google Dictionary&lt;/h2&gt;

&lt;p&gt;Google dictionary uses a phonetic notation same as &lt;a href=&#34;http://en.wikipedia.org/wiki/Pronunciation_respelling_for_English&#34;&gt;NORD (New Oxford American Dictionary)&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To figure out an unknown phonetic notation, the simple way is to look up a few words that you know how to pronounce:
church, hat, which, judge, game, thing, ship, thin, this, yes, pleasure
cat, pay, care, father, arm, let, see, here, city, my, pot, no, caught, war, force, boy, put, tour, boot, out, cut, word, item, rabbit, winner, pupil&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>